const axios = require("axios");

module.exports.config = {
  name: "album",
  version: "1.0.0",
  permisson: 0,
  credits: "SK-SIDDIK-KHAN",
  description: "‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶¨‡ßá‡¶õ‡ßá ‡¶®‡¶ø‡¶®",
  prefix: true,
  category: "video",
  usages: "[page_number]",
  cooldowns: 5
};

module.exports.run = async function ({ api, event, args }) {
  try {
    const response = await axios.get("https://raw.githubusercontent.com/DJ-SIDDIK-15/cemiFinal/refs/heads/main/Siddik.json");

    if (!response.data || !response.data.siddik || response.data.siddik.length === 0) {
      return api.sendMessage("‚ö†Ô∏è ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§ ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", event.threadID, event.messageID);
    }

    const videos = response.data.siddik;
    const itemsPerPage = 10;
    const page = parseInt(args[0]) || 1;
    const totalPages = Math.ceil(videos.length / itemsPerPage);

    if (page < 1 || page > totalPages) {
      return api.sendMessage(`‚ùå ‡¶Ö‡¶¨‡ßà‡¶ß ‡¶™‡ßá‡¶ú ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞! 1 ‡¶•‡ßá‡¶ï‡ßá ${totalPages} ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßá‡¶ú ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶¶‡¶ø‡¶®‡•§`, event.threadID, event.messageID);
    }

    const startIndex = (page - 1) * itemsPerPage;
    const videosOnPage = videos.slice(startIndex, startIndex + itemsPerPage);

    let messageContent = `‚ï≠‚ïº|‚îÅ‚ô°ùêíùêàùêÉùêÉùêàùêä-ùêÅùêéùêì-ùüéùüï‚ô°‚îÅ|‚ïæ‚ïÆ\n\n‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞‡ßá ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶ï‡¶∞‡ßÅ‡¶®:\n\n‚ï∞‚ïº|‚îÅ‚ô°ùêíùêàùêÉùêÉùêàùêä-ùêÅùêéùêì-ùüéùüï‚ô°‚îÅ|‚ïæ‚ïØ\n` +
        `‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì\n` +
      videosOnPage
        .map((video, index) => `‚î£‚û§ ${startIndex + index + 1}. ${video.name}`)
        .join("\n") +
        `\n‚îó‚îÅ‚îÅ‚îÅ‚îÅ[ùó¶ùóúùóóùóóùóúùóû-ùóïùó¢ùóß]‚îÅ‚îÅ‚îÅ‚îÅ‚îõ\n` +
        `\n‚òΩ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚òæ\n           üî∞ | ùêèùêöùê†ùêû [ ${page}/${totalPages} ] üî∞\n‚òΩ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚òæ`;

    api.sendMessage(messageContent, event.threadID, (err, info) => {
      if (err) return console.error("‚ö†Ô∏è ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", err);

      global.client.handleReply.push({
        name: "album",
        messageID: info.messageID,
        author: event.senderID,
        videos: videos
      });
    });

  } catch (error) {
    console.error("‚ö†Ô∏è ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶´‡ßá‡¶ö ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", error);
    api.sendMessage("‚ö†Ô∏è ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§ ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", event.threadID, event.messageID);
  }
};

module.exports.handleReply = async function ({ api, event, handleReply }) {
  if (event.senderID !== handleReply.author) return;

  const selectedNumber = parseInt(event.body);
  
  if (isNaN(selectedNumber) || selectedNumber < 1 || selectedNumber > handleReply.videos.length) {
    return api.sendMessage("‚ùå ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶¶‡¶ø‡¶®‡•§", event.threadID, event.messageID);
  }

  const selectedVideo = handleReply.videos[selectedNumber - 1];

  try {
    const loadingMessage = await api.sendMessage("ùêãùê®ùêöùêùùê¢ùêßùê† ùêïùê¢ùêùùêûùê® ùêèùê•ùêûùêöùê¨ùêû ùêñùêöùê¢ùê≠...‚è∞", event.threadID);

    const videoUrl = selectedVideo.verses[Math.floor(Math.random() * selectedVideo.verses.length)];

    console.log("‚úÖ Selected Video URL:", videoUrl); 

    const response = await axios({
      method: "GET",
      url: videoUrl,
      responseType: "stream"
    });

    if (!response.data) {
      return api.sendMessage("‚ö†Ô∏è ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡ßü‡ßá‡¶õ‡ßá! ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶™‡¶∞‡ßá ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", event.threadID, event.messageID);
    }

    api.sendMessage({
      body: `ùêíùêàùêÉùêÉùêàùêä-ùêÅùêéùêì - ${selectedVideo.name}`,
      attachment: response.data,
    }, event.threadID, () => api.unsendMessage(loadingMessage.messageID));

  } catch (error) {
    console.error("‚ö†Ô∏è ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", error);
    api.sendMessage("‚ö†Ô∏è ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§ ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", event.threadID, event.messageID);
  }
};
